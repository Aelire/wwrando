name: Test

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows
            os: windows-latest
            artifact: windows
            reqs_file: requirements_full.txt
          - name: Windows (Qt 5)
            os: windows-latest
            artifact: windows-qt5
            reqs_file: requirements_qt5_full.txt
          - name: MacOS
            os: macos-latest
            artifact: macos
            reqs_file: requirements_full.txt
          - name: Linux
            os: ubuntu-latest
            artifact: linux
            reqs_file: requirements_full.txt
    
    container: ghcr.io/LagoLunatic/wwrando-test-files:main
    
    runs-on: ${{ matrix.os }}
    
    env:
      DISPLAY: ':99.0'
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip' # Cache all pip dependency downloads
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ matrix.reqs_file }}
      - name: Install any missing Qt dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev libxcb-cursor0 libxcb-xinerama0 xvfb herbstluftwm
      - name: Set up Qt
        uses: tlambert03/setup-qt-libs@v1
        if: runner.os == 'Linux'
      - name: Build "display"
        if: runner.os == 'Linux'
        run: |
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
      - name: Extract test files
        uses: edgarrc/action-7z@v1
        with:
          args: 7z x /wwrando-files/GZLE01-stripped.7z -o/wwrando-files/
      - name: Prepare test env vars
        run: |
          echo "WW_GZLE01_STRIPPED_PATH=/wwrando-files/WW Stripped ISO.iso" > .env
          echo "WW_RANDO_OUTPUT_DIR=/wwrando-output" > .env
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest test --cov --cov-report=html
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: wwrando-htmlcov-${{ matrix.artifact }}
          path: htmlcov
