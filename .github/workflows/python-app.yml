name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Add seed key
        run: echo "${{ secrets.SEED_KEY }}" > keys/seed_key.py
      - name: Add release key
        run: echo ${{ secrets.RELEASE_KEY }} > keys/build_key.txt
      - name: Set up Python 3.8 32-bit
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x86
      - name: Set up Python 3.8 64-bit
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64
      - name: Install dependencies
        run: |
          python -3.8-32 -m pip install --upgrade pip
          python -3.8-32 -m pip install -r requirements_full.txt
          python -3.8-64 -m pip install --upgrade pip
          python -3.8-64 -m pip install -r requirements_full.txt
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
      - name: Build Windows App
        run: |
          python -3.8-32 -m PyInstaller wwrando.spec
          python -3.8-64 -m PyInstaller wwrando.spec
      - name: Bundle Windows App
        run: |
          python -3.8-32 build.py
          python -3.8-64 build.py
      - name: Upload 32-bit Windows App
        uses: actions/upload-artifact@v2
        with:
         name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-windows-32bit
         path: dist/release_archive_32bit/*
      - name: Upload 64-bit Windows App
        uses: actions/upload-artifact@v2
        with:
         name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-windows-64bit
         path: dist/release_archive_64bit/*

  macos:
    runs-on: macos-latest

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MACOSX_DEPLOYMENT_TARGET: 10.9

    steps:
      - uses: actions/checkout@v2
      - name: Add seed key
        run: echo "${{ secrets.SEED_KEY }}" > keys/seed_key.py
      - name: Add release key
        run: echo ${{ secrets.RELEASE_KEY }} > keys/build_key.txt
      - name: Set up Miniconda with Python 3.8
        uses: goanpeca/setup-miniconda@v1
        with:
          python-version: 3.8
          architecture: x64
          miniconda-version: latest
      - run: |
          conda create -qyf -n py38 python=3.8 wheel -c anaconda
          conda activate py38
        shell: bash -l {0}
      - name: Install dependencies
        run: |
          conda install pip
          python3 -m pip install -r requirements_full.txt
        shell: bash -l {0}
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
      - name: Build MacOS App
        run: python3 -m PyInstaller --onefile --windowed wwrando.spec
        shell: bash -l {0}
      - name: Bundle MacOS App
        run: python3 build.py
        shell: bash -l {0}
      - uses: actions/upload-artifact@v2
        with:
          name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-macos
          path: dist/release_archive_64bit/*

  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Add seed key
        run: echo "${{ secrets.SEED_KEY }}" > keys/seed_key.py
      - name: Add release key
        run: echo ${{ secrets.RELEASE_KEY }} > keys/build_key.txt
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_full.txt
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat version.txt)"
          echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
      - name: Build Linux App
        run: python -m PyInstaller wwrando.spec
      - name: Bundle Linux App
        run: python build.py
      - uses: actions/upload-artifact@v2
        with:
          name: wwrando-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.sha_short }}-linux
          path: dist/release_archive_64bit/*
